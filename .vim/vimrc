call plug#begin('~/.vim/plugged')
Plug 'vim-airline/vim-airline'
Plug 'w0rp/ale'
Plug 'ConradIrwin/vim-bracketed-paste'
Plug 'yuttie/comfortable-motion.vim'
Plug 'maralla/completor.vim'
Plug 'tpope/vim-fugitive' | Plug 'tpope/vim-rhubarb'
Plug 'junegunn/fzf.vim'
Plug 'airblade/vim-gitgutter'
Plug 'junegunn/goyo.vim' | Plug 'junegunn/limelight.vim'
Plug 'morhetz/gruvbox'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'ryanoasis/vim-devicons' " Load after supported plugins
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'jremmen/vim-ripgrep'
Plug 'matthew-brett/vim-rst-sections', { 'for': 'rst' }
Plug 'ervandew/supertab'
Plug 'dhruvasagar/vim-table-mode', { 'for': ['markdown', 'rst'] }
Plug 'cespare/vim-toml'
Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
Plug 'tpope/vim-unimpaired'
Plug 'jalvesaq/vimcmdline'
call plug#end()

" Two-space indentation
set tabstop=2
set shiftwidth=2
set expandtab
set autoindent

" Ignore case unless 'the search pattern contains upper case characters'
set ignorecase
set smartcase

" Colorscheme
let &t_8f='[38;2;%lu;%lu;%lum'
let &t_8b='[48;2;%lu;%lu;%lum'
set termguicolors
set background=dark
let g:gruvbox_italic=1
colorscheme gruvbox
call togglebg#map('<F5>')

" Miscellany
let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled=1
let g:bufferline_echo=0
let g:bufferline_solo_highlight=1
let g:tar_cmd='bsdtar'
set hidden
set laststatus=2

" Close Vim if the only window left open is a NERDTree
autocmd BufEnter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif

" '.. prevent passwords leaking into swap, backup and undo files.'
" http://lists.zx2c4.com/pipermail/password-store/2015-July/001618.html
autocmd BufNewFile,BufRead /dev/shm/pass.* setlocal noswapfile nobackup noundofile

" Ignore warnings that aren't applicable to PKGBUILDs
autocmd BufEnter PKGBUILD let b:ale_sh_shellcheck_exclusions = 'SC2034,SC2154,SC2164'

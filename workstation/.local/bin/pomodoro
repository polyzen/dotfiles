#!/usr/bin/env bash

set -e

if [[ -n $TMUX ]]; then
  trap 'tmux set automatic-rename' EXIT
fi

readonly INTERVALS=('Po' 'mo' 'do' 'ro')
readonly WORKMSG='🔍 Focus'
readonly WORKTIME='25m'
readonly SHORTBREAKMSG='🧘 Stretch'
readonly SHORTBREAKTIME='5m'
readonly LONGBREAKMSG='💆 Rest'
readonly LONGBREAKTIME='15m'

declare -i BEEP LOOP
declare -a ARGS

while :; do
  case $1 in
    -b|--beep)
      BEEP=1
      ;;
    -l|--loop)
      LOOP=1
      ;;
    --)
      shift
      ARGS=("$@")
      break
      ;;
    -?*)
      printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
      ;;
    *)
      break
  esac

  shift
done

readonly BEEP LOOP ARGS

timer() {
  local -a args

  if [[ -n $TMUX ]]; then
    tmux rename-window "$1"
  fi

  toastify send --id 45 "$1" "$intervalmsg"

  args=("${ARGS[@]}" "-T $1")
  termdown "${args[@]}" "$2"

  if [[ $BEEP -eq 1 ]]; then
    beep -f 5000 -l 50 -r 2
  fi
}

pomodoro() {
  local intervalmsg breakmsg breaktime

  for (( i = 1; i <= ${#INTERVALS[*]}; i++ )); do
    # Highlight (in bold) intervals as they pass
    intervalmsg="<b>${INTERVALS[*]:0:i}</b> ${INTERVALS[*]:i}"

    if (( i < ${#INTERVALS[*]} )); then
      breakmsg="$SHORTBREAKMSG"
      breaktime="$SHORTBREAKTIME"
    else
      breakmsg="$LONGBREAKMSG"
      breaktime="$LONGBREAKTIME"
    fi

    timer "$WORKMSG" "$WORKTIME"
    timer "$breakmsg" "$breaktime"
  done
}

if [[ $LOOP -eq 1 ]]; then
  while true; do
    pomodoro
  done
else
  pomodoro
fi

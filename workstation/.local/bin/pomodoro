#!/usr/bin/env bash

set -e

declare PANE_ID
if [[ -n $TMUX ]]; then
  PANE_ID=$(tmux display-message -p '#D')
  trap 'tmux set -t "$PANE_ID" automatic-rename' EXIT
fi
readonly PANE_ID

readonly INTERVALS=('Po' 'mo' 'do' 'ro')
readonly LONG_BREAK_MSG='💆 Rest'
readonly LONG_BREAK_TIME='15m'
readonly SHORT_BREAK_MSG='🧘 Stretch'
readonly SHORT_BREAK_TIME='5m'
readonly WORK_MSG='🔍 Focus'
readonly WORK_TIME='25m'

declare -a ARGS
declare -i BEEP LOOP
while :; do
  case $1 in
    -b | --beep)
      BEEP=1
      ;;
    -l | --loop)
      LOOP=1
      ;;
    --)
      shift
      ARGS=("$@")
      break
      ;;
    -?*)
      printf 'WARN: Unknown option (ignored): %s\n' "$1" >&2
      ;;
    *)
      break
      ;;
  esac

  shift
done
readonly ARGS BEEP LOOP

timer() {
  local -a args

  if [[ -n $TMUX ]]; then
    tmux rename-window -t "$PANE_ID" "$1"
  fi

  toastify send "$1" "$interval_msg" 45

  args=("${ARGS[@]}" "-T $1")
  termdown "${args[@]}" "$2"

  if [[ $BEEP -eq 1 ]]; then
    beep -f 5000 -l 50 -r 2
  fi
}

pomodoro() {
  local break_msg break_time interval_msg

  for ((i = 1; i <= ${#INTERVALS[*]}; i++)); do
    # Highlight (in bold) intervals as they pass
    interval_msg="<b>${INTERVALS[*]:0:i}</b> ${INTERVALS[*]:i}"

    if ((i < ${#INTERVALS[*]})); then
      break_msg="$SHORT_BREAK_MSG"
      break_time="$SHORT_BREAK_TIME"
    else
      break_msg="$LONG_BREAK_MSG"
      break_time="$LONG_BREAK_TIME"
    fi

    timer "$WORK_MSG" "$WORK_TIME"
    timer "$break_msg" "$break_time"
  done
}

if [[ $LOOP -eq 1 ]]; then
  while true; do
    pomodoro
  done
else
  pomodoro
fi
